generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                    String                   @db.VarChar(255) @unique
  password                 String                   @db.VarChar(255)
  refreshId                String                   @db.VarChar(255) @unique @map("refresh_id")
  firstName                String                   @db.VarChar(255) @map("first_name")
  lastName                 String                   @db.VarChar(255) @map("last_name")
  role                     String
  isActive                 Boolean                  @default(true) @map("is_active")
  lastLoginAt              DateTime?                @map("last_login_at")
  createdAt                DateTime                 @default(now()) @map("created_at")
  updatedAt                DateTime?                @updatedAt @map("updated_at")
  deletedAt                DateTime?                @map("deleted_at")

  cart                     Cart[]                   @relation("CartUser")

  @@index([email])
  @@map(name: "user")
}

model Category {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                     String                   @db.VarChar(255) @unique
  isActive                 Boolean                  @default(true) @map("is_active")
  createdAt                DateTime                 @default(now()) @map("created_at")
  updatedAt                DateTime?                @updatedAt @map("updated_at")
  deletedAt                DateTime?                @map("deleted_at")

  devices                   Device[]                @relation("DeviceCategory")

  @@index([name])
  @@map(name: "category")
}

model Brand {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                     String                   @db.VarChar(255) @unique
  isActive                 Boolean                  @default(true) @map("is_active")
  createdAt                DateTime                 @default(now()) @map("created_at")
  updatedAt                DateTime?                @updatedAt @map("updated_at")
  deletedAt                DateTime?                @map("deleted_at")

  devices                   Device[]                @relation("DeviceBrand")

  @@index([name])
  @@map(name: "brand")
}

model Device {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  categoryId               String                   @db.Uuid @map("category_id")
  brandId                  String                   @db.Uuid @map("brand_id")
  name                     String                   @db.VarChar(255) @unique
  description              String                   @db.VarChar(255)
  quantity                 Int
  price                    Float                    
  isActive                 Boolean                  @default(true) @map("is_active")
  createdAt                DateTime                 @default(now()) @map("created_at")
  updatedAt                DateTime?                @updatedAt @map("updated_at")
  deletedAt                DateTime?                @map("deleted_at")
  category                 Category                 @relation(name: "DeviceCategory", fields: [categoryId], references: [id])
  brand                    Brand                    @relation(name: "DeviceBrand", fields: [brandId], references: [id])

  cart                     Cart[]                   @relation("CartDevice")

  @@index([name])
  @@map(name: "device")
}

model Cart {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId                   String                   @db.Uuid @map("user_id")
  deviceId                 String                   @db.Uuid @map("device_id")
  quantity                 Int
  price                    Float                  
  isActive                 Boolean                  @default(true) @map("is_active")
  createdAt                DateTime                 @default(now()) @map("created_at")
  updatedAt                DateTime?                @updatedAt @map("updated_at")
  deletedAt                DateTime?                @map("deleted_at")
  user                     User                     @relation(name: "CartUser", fields: [userId], references: [id])
  device                   Device                   @relation(name: "CartDevice", fields: [deviceId], references: [id])  

  @@index([id])
  @@map(name: "cart")
}
